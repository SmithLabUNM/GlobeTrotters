#load libraries
require(dplyr)
require(purrrlyr)
require(tidyverse)
require(tidyr)
require(reshape2)
require(ggplot2)
#load data
options(stringsAsFactors = FALSE)
data <- read.table("MOM.global.mammals.csv", header = TRUE, sep = ",")
## Data does not include oceanic (marine) species; does include aquatic spp.
## Data does not include introduced species (only native ranges)
data$n.cont[data$n.cont == 4] <- "3+"
data$n.cont[data$n.cont == 3] <- "3+"
data$n.cont <- as.factor(data$n.cont)
######H3 spp on mult cont are larger
clean.data <- subset(data, data$mass >= 0) #3768
length(clean.data$binomial)
unique.data <- clean.data %>%
group_by(binomial) %>%
dplyr::summarise(mass = mean(mass), n.cont = n.cont[1]) %>%
as.data.frame()
unique.data$logMass <- log10(unique.data$mass)
unique.data$global <- as.factor(unique.data$n.cont)
length(unique.data$binomial)
#1 v 2+
median(unique.data$mass[unique.data$n.cont == 1])
median(unique.data$mass[unique.data$n.cont == 2 | unique.data$n.cont == "3+"])
#1 v 2+
length(unique.data$mass[unique.data$n.cont == 1])
length(unique.data$mass[unique.data$n.cont == 2 | unique.data$n.cont == "3+"])
median(unique.data$mass[unique.data$n.cont == 1])
median(unique.data$mass[unique.data$n.cont == 2 | unique.data$n.cont == "3+"])
ks.test(unique.data$mass[unique.data$n.cont == 1], clean.data$mass[clean.data$n.cont == 2 | clean.data$n.cont == "3+"])
#1+2 v 3+
length(unique.data$mass[unique.data$n.cont == 1 | unique.data$n.cont == 2]) #3499
length(unique.data$mass[unique.data$n.cont == "3+"]) #6
median(unique.data$mass[unique.data$n.cont == 1 | unique.data$n.cont == 2]) #78
median(unique.data$mass[unique.data$n.cont == "3+"]) #92753.02
ks.test(unique.data$mass[unique.data$n.cont == 1 | unique.data$n.cont == 2],
unique.data$mass[unique.data$n.cont == "3+"]) #p = 0.09561
#for continent pairs
#NA and SA
N_S_America <- subset(clean.data, clean.data$continent == "North.America" | clean.data$continent == "South.America")
N_S_America1 <- subset(N_S_America, N_S_America$n.cont == 1) #1354
length(N_S_America1$binomial)
two.cont_NS1 <- subset(N_S_America, N_S_America$n.cont == 2) #349
length(two.cont_NS1$binomial) #349
two.cont_NS <- plyr::ddply(two.cont_NS, 'binomial', function(.df){
size <- mean(.df$mass)
})
colnames(two.cont_NS)[2] <- "size"
ks.test(N_S_America$mass, two.cont_NS$size, alternative = "two.sided") #p = 1.223e-13
two.cont_NS <- plyr::ddply(two.cont_NS, 'binomial', function(.df){
size <- mean(.df$mass)
})
two.cont_NS <- subset(N_S_America, N_S_America$n.cont == 2)
two.cont_NS <- plyr::ddply(two.cont_NS, 'binomial', function(.df){
size <- mean(.df$mass)
})
colnames(two.cont_NS)[2] <- "size"
ks.test(N_S_America$mass, two.cont_NS$size, alternative = "two.sided") #p = 1.223e-13
ks.test(N_S_America$mass, two.cont_NS$size, alternative = "less") #p < 6.115e-14
ks.test(N_S_America$mass, two.cont_NS$size, alternative = "greater") #p = 0.3801 x is statistically smaller than y
#EA and AF
EA_AF <- subset(clean.data, clean.data$continent == "Eurasia" | clean.data$continent == "Africa")
EA_AF1 <- subset(EA_AF, EA_AF$n.cont == 1) #1577 spp
two.cont_EF <- subset(EA_AF, EA_AF$n.cont == 2)
two.cont_EF <- plyr::ddply(two.cont_EF, 'binomial', function(.df){
size <- mean(.df$mass)
})
colnames(two.cont_EF)[2] <- "size"
length(EA_AF1$binomial)
length(two.cont_EF$binomial)
length(two.cont_NS$binomial) #332
ks.test(EA_AF$mass, two.cont_EF$size, alternative = "two.sided") #p = 0.3001
ks.test(EA_AF$mass, two.cont_EF$size, alternative = "less") # p = 0.3181
ks.test(EA_AF$mass, two.cont_EF$size, alternative = "greater") #p = 0.1505
#EA and NA
EA_NA <- subset(clean.data, clean.data$continent == "North.America" | clean.data$continent == "Eurasia")
EA_NA1 <- subset(EA_NA, EA_NA$n.cont == 1) #length 1337
two.cont_EN <- subset(EA_NA, EA_NA$n.cont == 2)
length(EA_NA1$binomial)
two.cont_EN <- subset(EA_NA, EA_NA$n.cont == 2)
two.cont_EN <- plyr::ddply(two.cont_EN1, 'binomial', function(.df){
size <- mean(.df$mass)
})
two.cont_EN <- plyr::ddply(two.cont_EN, 'binomial', function(.df){
size <- mean(.df$mass)
})
colnames(two.cont_EN)[2] <- "size"
length(two.cont_EN$binomial)
ks.test(EA_NA$mass, two.cont_EN$size, alternative = "two.sided") # p = 2.335e-07
ks.test(EA_NA$mass, two.cont_EN$size, alternative = "less") #p = 1.167e-07
ks.test(EA_NA$mass, two.cont_EN$size, alternative = "greater") #p = 0.5561
col <- c("#2ca25f", "#99d8c9", "#e5f5f9")
plot_theme <- theme(panel.grid = element_blank(),
aspect.ratio = .75, #adjust as needed
axis.text = element_text(size = 21, color = "black"),
axis.ticks.length=unit(0.2,"cm"),
axis.title = element_text(size = 21),
axis.title.y = element_text(margin = margin(r = 10)),
axis.title.x = element_text(margin = margin(t = 10)),
axis.title.x.top = element_text(margin = margin(b = 5)),
plot.title = element_text(size = 21, face = "plain", hjust = 10),
panel.border = element_rect(colour = "black", fill=NA, size=1),
panel.background = element_blank(),
legend.position = "none",
text = element_text(family = 'Helvetica'))
## body mass
ggplot() +
geom_density(data = clean.data, aes(x = log10(mass), fill = num.conts), alpha = 0.7) +
scale_fill_manual(values = col,
name="Continents") +
theme_jmg + theme(legend.position = c(0.85, 0.82))+
scale_x_continuous(name = expression(log[10]~Body~Mass~(g)),
breaks = seq(-1, 7.5, 1),
limits = c(-0, 7.5),
expand=c(0,0))+
scale_y_continuous(limits = c(0, 0.65),breaks = c(0,0.2,0.4,0.6),expand=c(0,0),
name = 'Probability')
## body mass
ggplot() +
geom_density(data = clean.data, aes(x = log10(mass), fill = num.conts), alpha = 0.7) +
scale_fill_manual(values = col,
name="Continents") +
plot_theme + theme(legend.position = c(0.85, 0.82))+
scale_x_continuous(name = expression(log[10]~Body~Mass~(g)),
breaks = seq(-1, 7.5, 1),
limits = c(-0, 7.5),
expand=c(0,0))+
scale_y_continuous(limits = c(0, 0.65),breaks = c(0,0.2,0.4,0.6),expand=c(0,0),
name = 'Probability')
## body mass
ggplot() +
geom_density(data = clean.data, aes(x = log10(mass), fill = n.cont), alpha = 0.7) +
scale_fill_manual(values = col,
name="Continents") +
plot_theme + theme(legend.position = c(0.85, 0.82))+
scale_x_continuous(name = expression(log[10]~Body~Mass~(g)),
breaks = seq(-1, 7.5, 1),
limits = c(-0, 7.5),
expand=c(0,0))+
scale_y_continuous(limits = c(0, 0.65),breaks = c(0,0.2,0.4,0.6),expand=c(0,0),
name = 'Probability')
#understand data
length(df$binomial[df$diet.invertivore == TRUE]) #1986
unique(df$diet.invertivore)
#H5 spp on mult cont are omnivores
df = data[!duplicated(data$binomial),]
str(df)
#understand data
length(df$binomial[df$diet.invertivore == TRUE]) #1986
length(df$binomial[df$diet.carnivore == TRUE]) #333
length(df$binomial[df$diet.browser == TRUE]) #1619
length(df$binomial[df$diet.grazer == TRUE]) #610
length(df$binomial[df$diet.frugivore == TRUE]) #1935
length(df$binomial[df$diet.piscivore == TRUE]) #31
length(df$binomial[df$diet.breadth == 1]) #2481
length(df$binomial[df$diet.breadth == 2]) #1734
length(df$binomial[df$diet.breadth == 3]) #187
length(df$binomial[df$diet.breadth == 4]) #1
length(df$binomial[df$diet.breadth == 5]) #0
length(df$binomial[df$diet.breadth == 6]) #0
anova(lm(unique.data$n.cont ~ unique.data$dietbreadth)) #<0.001
anova(lm(df$n.cont ~ df$dietbreadth)) #<0.001
anova(lm(df$n.cont ~ df$diet.breadth)) #<0.001
df$diet.breadth <- as.factor(f$diet.breadth)
df$diet.breadth <- as.factor(df$diet.breadth)
anova(lm(df$n.cont ~ df$diet.breadth)) #<0.001
unique.data <- data %>%
group_by(binomial) %>%
dplyr:: summarise(dietbreadth = diet.breadth[1], n.cont = n.cont[1])
unique.data$dietbreadth <- as.factor(unique.data$dietbreadth)
anova(lm(unique.data$n.cont ~ unique.data$dietbreadth)) #<0.001
anova(lm(df$n.cont ~ df$diet.breadth)) #<0.001
length(df$binomial)
length(unique(df$binomial))
length(data$binomial)
str(df)
anova(lm(df$n.cont ~ df$diet.breadth)) #<0.001
help(anova)
anova(df$n.cont ~ df$diet.breadth) #<0.001
anova(glm(df$n.cont ~ df$diet.breadth)) #<0.001
manova(df$n.cont ~ df$diet.breadth) #<0.001
summary(manova(df$n.cont ~ df$diet.breadth))
help("manova")
