dplyr::select(binomial = accepted_name,
lw.range,
hi.range,
foss.age)
foss.ages <- pbdb %>%
group_by(accepted_name) %>%
summarise(binomial = accepted_name[1],
lw.range = max(min_ma),
hi.range = max(max_ma),
foss.age = (hi.range+lw.range)/2)
colnames(foss.ages)
colnames(phyl.ages)
mom.origin.phylAge <- left_join(mom.origin, phyl.ages,
by = "binomial")
mom.origin.phylAge.fossAge <- left_join(mom.origin.phylAge, foss.age,
by = "binomial")
mom.origin.phylAge.fossAge <- left_join(mom.origin.phylAge, foss.ages,
by = "binomial")
mom.origin.phylAge.fossAge.gen <- left_join(mom.origin.phylAge.fossAge, pacifici.trim,
by = "binomial") #why is it adding 2 rows?
nrow(mom.origin.phylAge.fossAge.gen)
nrow(mom.origin)
nrow(mom)
nrow(mom.origin.phylAge)
nrow(mom.origin.phylAge.fossAge)
x <- mom.origin.phylAge.fossAge.gen[duplicated(mom.origin.phylAge.fossAge.gen$index),]
y.1 <- mom.origin.phylAge.fossAge.gen[mom.origin.phylAge.fossAge.gen$index == x$index[1],]
pacifici.trim[pacifici.trim$binomial == y.1$binomial,] #no information for GenLength == 3206.296, remove; 1st index
y.2 <- mom.origin.phylAge.fossAge.gen[mom.origin.phylAge.fossAge.gen$index == x$index[2],]
pacifici.trim[pacifici.trim$binomial == y.2$binomial,] #no information for GenLength == 6095.5, remove; 2nd index
a <- mom.origin.phylAge.fossAge.gen
a.1 <- a[!(a$binomial == y.1$binomial[1] & a$GenerationLength_d == y.1$GenerationLength_d[1]),]
a.2 <- a.1[!(a.1$binomial == y.2$binomial[1] & a.1$GenerationLength_d == y.2$GenerationLength_d[2]),]
mom.origin.phylAge.fossAge.gen.foss <- left_join(a.2, foss.ages,
by = "binomial")
##manipulate data----
##trim data
colnames(pacifici)
pacifici.trim <- pacifici %>%
dplyr::select(binomial = Scientific_name,
Max_longevity_d,
Rspan_d,
AFR_d,
Calculated_GL_d,
GenerationLength_d)
colnames(origin)
origin.trim <- origin %>%
dplyr::select(family,
continent.family = continent)
colnames(ranges)
ranges.trim <- ranges %>%
dplyr::select(binomial = Binomial.1.2,
current.range,
present.natural.range,
current.range.km2,
present.natural.range.km2)
colnames(pantheria)
pantheria.trim <- pantheria %>%
dplyr::select(binomial = MSW05_Binomial,
home.range.km2 = X22.1_HomeRange_km2,
indiv.home.range.km2 = X22.2_HomeRange_Indiv_km2,
dispersal.age.d = X7.1_DispersalAge_d)
##Combine data
mom.origin <- left_join(mom, origin.trim,
by = "family")
mom.origin.gen <- left_join(mom.origin, pacifici.trim,
by = "binomial") #why is it adding 2 rows?
x <- mom.origin.gen[duplicated(mom.origin.gen$index),]
y.1 <- mom.origin.gen[mom.origin.gen$index == x$index[1],]
pacifici.trim[pacifici.trim$binomial == y.1$binomial,] #no information for GenLength == 3206.296, remove; 1st index
y.2 <- mom.origin.gen[mom.origin.gen$index == x$index[2],]
pacifici.trim[pacifici.trim$binomial == y.2$binomial,] #no information for GenLength == 6095.5, remove; 2nd index
a <- mom.origin.gen
a.1 <- a[!(a$binomial == y.1$binomial[1] & a$GenerationLength_d == y.1$GenerationLength_d[1]),]
a.2 <- a.1[!(a.1$binomial == y.2$binomial[1] & a.1$GenerationLength_d == y.2$GenerationLength_d[2]),]
mom.origin.gen.foss <- left_join(a.2, foss.ages,
by = "binomial")
mom.origin.gen.foss.phyl <- left_join(mom.origin.gen.foss, phyl.ages,
by = "binomial")
mom.origin.gen.foss.phyl.ranges <- left_join(mom.origin.gen.foss.phyl, ranges.trim,
by = "binomial")
mom.origin.gen.foss.phyl.ranges.pan <- left_join(mom.origin.gen.foss.phyl.ranges, pantheria.trim,
by = "binomial")
df <- mom.origin.gen.foss.phyl.ranges.pan
##remove marine species
df <- df %>%
# Order Cetacea (Whales s.l.)
filter(order != "Cetacea") %>%
# Order Sirenia (Sea cows s.l.):
filter(order != "Sirenia") %>%
# Families in the clade Pinnipedia (Seal s.l.):
# Odobenidae (walruses)
# Otariidae (fur seals and sea lions)
# Phocidae (true seals)
filter(!family %in% c("Odobenidae", "Otariidae", "Phocidae")) %>%
# Other marine mammals:
# Marine otter (Lontra felina)
filter(binomial != "Lontra felina")
##fix continents
# Search for continental mistakes
table(df$continent, useNA = "always")
# Remove NA's, Insulars, and Marine
df <- filter(df, !is.na(continent) &
continent != "Insular" &
continent != "Marine")
##fix diet
df$trophic[which(df$trophic == "")] <- NA
sort(table(df$trophic))
invertivore <- c("ainsect", "Ainsect", "ainsect/carn", "ainsect/ginsect",
"browse/frug/ginsect", "Browse/frug/ginsect", "browse/ginsect",
"browse/ginsect/carn", "carn/ginsect", "carn/ginsect/frug", "carn/invert",
"carn/ginsect/frug", "carn/invert", "carn/invert/frug", "frug/Ainsect",
"frug/ginsect", "Frug/ginsect", "frug/ginsect/browse", "frug/ginsect/carn",
"frug/browse/ginsect", "frug/invert", "ginsect", "Ginsect", "ginsect (earthworms)",
"ginsect/browse", "ginsect/browse/frug", "ginsect/carn", "Ginsect/carn", "ginsect/carn/frug",
"ginsect/frug", "Ginsect/frug", "ginsect/frug/browse", "Ginsect/frug/carn",
"graze/ginsect", "herb/invert", "insect", "invert", "invert/browse", "invert/carn",
"invert/carn/frug", "invert/piscivore", "inverts/carn/frug", "piscivore/invert", "piscivore/invert/carn")
carnivore <- c("ainsect/carn", "browse/ginsect/carn", "carn", "Carn", "carn/frug", "carn/ginsect",
"carn/ginsect/frug", "carn/invert", "carn/invert/frug", "carn/omnivore", "Carn/piscivore",
"frug/browse/carn", "ginsect/carn", "Ginsect/carn", "ginsect/carn/frug", "Ginsect/frug/carn",
"Graze/carn", "invert/carn", "invert/carn/frug", "inverts/carn/frug", "piscivore/invert/carn", "frug/carn")
browser <- c("browse", "Browse", "browse (bamboo)", "browse (roots & tubers)", "browse/frug", "Browse/frug",
"browse/frug/ginsect", "Browse/frug/ginsect", "browse/ginsect", "browse/ginsect/carn",
"browse/graze", "Browse/graze", "browse/graze/frug", "frug/browse", "Frug/browse", "frug/browse/carn",
"frug/browse/ginsect", "frug/browse/graze", "frug/ginsect/browse", "ginsect/browse", "ginsect/browse/frug",
"ginsect/frug/browse", "graze/brower", "graze/browse", "Graze/browse", "graze/browse/frug", "invert/browse")
grazer <- c("browse/graze", "Browse/graze", "browse/graze/frug", "frug/browse/graze", "frug/graze", "graze", "Graze",
"graze/brower", "graze/browse", "Graze/browse", "graze/browse/frug", "Graze/carn", "graze/frug", "Graze/frug",
"graze/ginsect")
frugivore <- c("browse/frug", "Browse/frug", "browse/frug/ginsect", "Browse/frug/ginsect", "browse/graze/frug", "carn/frug",
"carn/ginsect/frug", "carn/invert/frug", "frug", "Frug", "frug/Ainsect", "frug/browse", "Frug/browse", "frug/browse/carn",
"frug/browse/ginsect", "frug/browse/graze", "frug/carn", "frug/ginsect", "Frug/ginsect", "frug/ginsect/browse", "frug/ginsect/carn",
"frug/graze", "frug/herb", "frug/invert", "ginsect/browse/frug", "ginsect/carn/frug", "ginsect/frug", "Ginsect/frug",
"ginsect/frug/browse", "Ginsect/frug/carn", "graze/browse/frug", "graze/frug", "Graze/frug", "invert/carn/frug", "inverts/carn/frug")
piscivore <- c("Carn/piscivore", "invert/piscivore", "piscivore", "piscivore/invert", "piscivore/invert/carn")
troph.diet <- which(df$trophic %in% c(invertivore, carnivore, browser, grazer, frugivore, piscivore))
df <- df %>% mutate(diet.invertivore = trophic %in% invertivore,
diet.carnivore = trophic %in% carnivore,
diet.browser = trophic %in% browser,
diet.grazer = trophic %in% grazer,
diet.frugivore = trophic %in% frugivore,
diet.piscivore = trophic %in% piscivore)
# Find NAs and replace them with genereic averages
df %>%
dplyr::select(starts_with("diet")) %>%
colSums()
df$diet.src <- NA
df$diet.src[troph.diet] <- "troph.diet"
diet <- df %>%
dplyr::select(order, family, genus, binomial, starts_with("diet"))
species.diet <- filter(diet, !is.na(diet.src)) %>% group_by(binomial) %>%
summarise(family = family[1],
genus = genus[1],
diet.invertivore = sum(diet.invertivore, na.rm = TRUE) >= 1,
diet.carnivore = sum(diet.carnivore, na.rm = TRUE) >= 1,
diet.browser = sum(diet.browser, na.rm = TRUE) >= 1,
diet.grazer = sum(diet.grazer, na.rm = TRUE) >= 1,
diet.frugivore = sum(diet.frugivore, na.rm = TRUE) >= 1,
diet.piscivore = sum(diet.piscivore, na.rm = TRUE) >= 1,
diet.src = "species.diet")
genus.diet <- group_by(species.diet, genus) %>%
summarise(family = family[1],
diet.invertivore = mean(diet.invertivore, na.rm = TRUE) > 0.5,
diet.carnivore = mean(diet.carnivore, na.rm = TRUE) > 0.5,
diet.browser = mean(diet.browser, na.rm = TRUE) > 0.5,
diet.grazer = mean(diet.grazer, na.rm = TRUE) > 0.5,
diet.frugivore = mean(diet.frugivore, na.rm = TRUE) > 0.5,
diet.piscivore = mean(diet.piscivore, na.rm = TRUE) > 0.5,
diet.src = "mean.genus")
family.diet <- group_by(genus.diet, family) %>%
summarise(diet.invertivore = mean(diet.invertivore, na.rm = TRUE) > 0.5,
diet.carnivore = mean(diet.carnivore, na.rm = TRUE) > 0.5,
diet.browser = mean(diet.browser, na.rm = TRUE) > 0.5,
diet.grazer = mean(diet.grazer, na.rm = TRUE) > 0.5,
diet.frugivore = mean(diet.frugivore, na.rm = TRUE) > 0.5,
diet.piscivore = mean(diet.piscivore, na.rm = TRUE) > 0.5,
diet.src = "mean.family")
for(i in 1:nrow(df)) {
if(df$binomial[i] %in% species.diet$binomial) {
k <- which(species.diet$binomial == df$binomial[i])
df[i, c("diet.invertivore", "diet.carnivore", "diet.browser", "diet.grazer", "diet.frugivore", "diet.piscivore", "diet.src")] <-
species.diet[k, c("diet.invertivore", "diet.carnivore", "diet.browser", "diet.grazer", "diet.frugivore", "diet.piscivore", "diet.src")]
} else if(df$genus[i] %in% genus.diet$genus) {
k <- which(genus.diet$genus == df$genus[i])
df[i, c("diet.invertivore", "diet.carnivore", "diet.browser", "diet.grazer", "diet.frugivore", "diet.piscivore", "diet.src")] <-
genus.diet[k, c("diet.invertivore", "diet.carnivore", "diet.browser", "diet.grazer", "diet.frugivore", "diet.piscivore", "diet.src")]
} else if(df$family[i] %in% family.diet$family) {
k <- which(family.diet$family == df$family[i])
df[i, c("diet.invertivore", "diet.carnivore", "diet.browser", "diet.grazer", "diet.frugivore", "diet.piscivore", "diet.src")] <-
family.diet[k, c("diet.invertivore", "diet.carnivore", "diet.browser", "diet.grazer", "diet.frugivore", "diet.piscivore", "diet.src")]
} else {
stop("Cannot find diet")
}
}
table(df$diet.src, useNA = "always")
df$diet.breadth <- df %>%
dplyr::select(diet.invertivore:diet.piscivore) %>%
rowSums()
table(df$diet.breadth)
##remove continental duplicates
# Checking for accidents
stopifnot(!any(str_trim(df$genus) != df$genus))
stopifnot(!any(str_trim(df$species) != df$species))
df$binomial[duplicated(df$binomial)]
df[(duplicated(df[c("binomial", "continent")])),]
# Remove introduced species
table(df$extant.status)
df <- df[-which(df$extant.status == "introduction"), ]
# Remove domesticated species
df <- df[-which(df$extant.status == "domesticated"), ]
#create ncont
cont <- group_by(df, binomial) %>% summarise(n.cont = n())
df <- left_join(df, cont,
by = "binomial")
##plot themes----
col <- c("#2ca25f", "#99d8c9", "#e5f5f9")
#create ncont
cont <- group_by(df, binomial) %>%
dplyr::summarise(n.cont = n())
df <- left_join(df, cont,
by = "binomial")
##data used for analyses----
write.csv(df, "data.csv")
df[df$binomial == "Homo sapiens"]
df[df$binomial == "Homo sapiens",]
#remove humans
df <- df[df$binomial != "Homo sapiens",]
df[df$binomial == "Homo sapiens",]
##data used for analyses----
write.csv(df, "data.csv")
unique(df$habitat.mode)
length(df$habitat.mode[df$habitat.mode != ""])
x <- df[unique(df$binomial),]
length(x$habitat.mode[x$habitat.mode != ""])
x <- df[!duplicated(df$binomial),]
nrow(x)
nrow(mom)
x <- length(x$habitat.mode)
x
x <- df[!duplicated(df$binomial),]
unique(x$habitat.mode)
length(x$habitat.mode[x$habitat.mode != ""])
require(reshape2)
require(tidyr)
require(dplyr)
dama.full <- read.csv("dama_bone_measurements_full.csv", header = TRUE, stringsAsFactors = FALSE)
setwd("~/Desktop")
require(reshape2)
require(tidyr)
require(dplyr)
dama.full <- read.csv("dama_bone_measurements_full.csv", header = TRUE, stringsAsFactors = FALSE)
types <- read.csv("measurement_type.csv", header = TRUE)
colnames(dama.full)
#make long version
long.full <- melt(dama.full, id.vars = c(1:15), measure.vars = c(16:109))
unique(long.full$variable)
long.full$variable <- gsub("X", "", long.full$variable)
unique(long.full$variable)
long.full$value <- as.numeric(long.full$value)
long.full.clean <- long.full %>%
drop_na(value)
long.full.meas$measurementType <- paste(long.full.meas$measurement_type_name, long.full.meas$bone_type_name, sep = " ")
long.full.meas <- merge(long.full.clean, types, by.x = "variable", by.y = "measurement_type_code", all.x = TRUE, all.y = FALSE)
long.full.meas$measurementType <- paste(long.full.meas$measurement_type_name, long.full.meas$bone_type_name, sep = " ")
traits <- long.full.meas %>%
select(bone_type_name, measurement_type_name, measurementType, reference)
traits <- long.full.meas %>%
select(bone_type_name, measurement_type_name, measurementType)
traits <- long.full.meas %>%
dplyr::select(bone_type_name, measurement_type_name, measurementType)
traits.full <- long.full.meas %>%
dplyr::select(bone_type_name, measurement_type_name, measurementType)
write.csv(traits.full, "NSykesTraits.full.csv")
View(traits.full)
traits.full <- traits.full %>%
distinct()
write.csv(traits.full, "NSykesTraits.full.csv")
View(traits.full)
View(pan)
##load packages----
require(dplyr)
require(purrrlyr)
require(tidyverse)
require(tidyr)
require(reshape2)
require(ggplot2)
require(stringr)
require(ape)
require(caper)
require(phytools)
##load data----
options(stringsAsFactors = FALSE)
setwd("~/GitHub/SmithLab/GlobeTrotters/Data")
mom <- read.csv("MOMv11.csv", header = TRUE)
pacifici <- read.csv("Generation Lenght for Mammals.csv", header = TRUE)
origin <- read.csv("familyOrigin.csv", header = TRUE)
pbdb <- read.csv("pbdb.data.csv", as.is = T)
faurby.ages <- read.csv("species.age.csv", header = TRUE, row.names = 1)
ranges <- read.csv("ranges.csv", header = TRUE)
pantheria <- read.csv("pantheria.csv", header = TRUE)
sp <- unique(mom$binomial)
foss.ages <- pbdb %>%
group_by(accepted_name) %>%
summarise(binomial = accepted_name[1],
lw.range = max(min_ma),
hi.range = max(max_ma),
foss.age = (hi.range+lw.range)/2)
species.age.summary <- function(x) {
c(age.mean = mean(x),
age.median = median(x),
age.lower.range = range(x)[1],
age.upper.range = range(x)[2],
age.q95 = quantile(x, .95),
age.q05 = quantile(x, .05),
age.sd = sd(x))
}
species.age <- apply(faurby.ages, 1, species.age.summary)
str(species.age)
species.age[1:7,1:5]
phyl.ages <- as.data.frame(t(species.age))
phyl.ages$binomial <- rownames(phyl.ages)
phyl.ages$binomial <- gsub("_", " ", phyl.ages$binomial)
phyl.ages <- phyl.ages %>%
dplyr::select(binomial, age.median)
##manipulate data----
##trim data
colnames(pacifici)
pacifici.trim <- pacifici %>%
dplyr::select(binomial = Scientific_name,
Max_longevity_d,
Rspan_d,
AFR_d,
Calculated_GL_d,
GenerationLength_d)
colnames(origin)
origin.trim <- origin %>%
dplyr::select(family,
continent.family = final.continent)
colnames(ranges)
ranges.trim <- ranges %>%
dplyr::select(binomial = Binomial.1.2,
current.range,
present.natural.range,
current.range.km2,
present.natural.range.km2)
colnames(pantheria)
pantheria.trim <- pantheria %>%
dplyr::select(binomial = MSW05_Binomial,
home.range.km2 = X22.1_HomeRange_km2,
indiv.home.range.km2 = X22.2_HomeRange_Indiv_km2,
dispersal.age.d = X7.1_DispersalAge_d)
##Combine data
mom.origin <- left_join(mom, origin.trim,
by = "family")
mom.origin.gen <- left_join(mom.origin, pacifici.trim,
by = "binomial") #why is it adding 2 rows?
x <- mom.origin.gen[duplicated(mom.origin.gen$index),]
y.1 <- mom.origin.gen[mom.origin.gen$index == x$index[1],]
pacifici.trim[pacifici.trim$binomial == y.1$binomial,] #no information for GenLength == 3206.296, remove; 1st index
y.2 <- mom.origin.gen[mom.origin.gen$index == x$index[2],]
pacifici.trim[pacifici.trim$binomial == y.2$binomial,] #no information for GenLength == 6095.5, remove; 2nd index
a <- mom.origin.gen
a.1 <- a[!(a$binomial == y.1$binomial[1] & a$GenerationLength_d == y.1$GenerationLength_d[1]),]
a.2 <- a.1[!(a.1$binomial == y.2$binomial[1] & a.1$GenerationLength_d == y.2$GenerationLength_d[2]),]
mom.origin.gen.foss <- left_join(a.2, foss.ages,
by = "binomial")
mom.origin.gen.foss.phyl <- left_join(mom.origin.gen.foss, phyl.ages,
by = "binomial")
mom.origin.gen.foss.phyl.ranges <- left_join(mom.origin.gen.foss.phyl, ranges.trim,
by = "binomial")
mom.origin.gen.foss.phyl.ranges.pan <- left_join(mom.origin.gen.foss.phyl.ranges, pantheria.trim,
by = "binomial")
df <- mom.origin.gen.foss.phyl.ranges.pan
##remove marine species
df <- df %>%
# Order Cetacea (Whales s.l.)
filter(order != "Cetacea") %>%
# Order Sirenia (Sea cows s.l.):
filter(order != "Sirenia") %>%
# Families in the clade Pinnipedia (Seal s.l.):
# Odobenidae (walruses)
# Otariidae (fur seals and sea lions)
# Phocidae (true seals)
filter(!family %in% c("Odobenidae", "Otariidae", "Phocidae")) %>%
# Other marine mammals:
# Marine otter (Lontra felina)
filter(binomial != "Lontra felina")
##fix continents
# Search for continental mistakes
table(df$continent, useNA = "always")
# Remove NA's, Insulars, and Marine
df <- filter(df, !is.na(continent) &
continent != "Insular" &
continent != "Marine")
##fix diet
df$trophic[which(df$trophic == "")] <- NA
sort(table(df$trophic))
invertivore <- c("ainsect", "Ainsect", "ainsect/carn", "ainsect/ginsect",
"browse/frug/ginsect", "Browse/frug/ginsect", "browse/ginsect",
"browse/ginsect/carn", "carn/ginsect", "carn/ginsect/frug", "carn/invert",
"carn/ginsect/frug", "carn/invert", "carn/invert/frug", "frug/Ainsect",
"frug/ginsect", "Frug/ginsect", "frug/ginsect/browse", "frug/ginsect/carn",
"frug/browse/ginsect", "frug/invert", "ginsect", "Ginsect", "ginsect (earthworms)",
"ginsect/browse", "ginsect/browse/frug", "ginsect/carn", "Ginsect/carn", "ginsect/carn/frug",
"ginsect/frug", "Ginsect/frug", "ginsect/frug/browse", "Ginsect/frug/carn",
"graze/ginsect", "herb/invert", "insect", "invert", "invert/browse", "invert/carn",
"invert/carn/frug", "invert/piscivore", "inverts/carn/frug", "piscivore/invert", "piscivore/invert/carn")
carnivore <- c("ainsect/carn", "browse/ginsect/carn", "carn", "Carn", "carn/frug", "carn/ginsect",
"carn/ginsect/frug", "carn/invert", "carn/invert/frug", "carn/omnivore", "Carn/piscivore",
"frug/browse/carn", "ginsect/carn", "Ginsect/carn", "ginsect/carn/frug", "Ginsect/frug/carn",
"Graze/carn", "invert/carn", "invert/carn/frug", "inverts/carn/frug", "piscivore/invert/carn", "frug/carn")
browser <- c("browse", "Browse", "browse (bamboo)", "browse (roots & tubers)", "browse/frug", "Browse/frug",
"browse/frug/ginsect", "Browse/frug/ginsect", "browse/ginsect", "browse/ginsect/carn",
"browse/graze", "Browse/graze", "browse/graze/frug", "frug/browse", "Frug/browse", "frug/browse/carn",
"frug/browse/ginsect", "frug/browse/graze", "frug/ginsect/browse", "ginsect/browse", "ginsect/browse/frug",
"ginsect/frug/browse", "graze/brower", "graze/browse", "Graze/browse", "graze/browse/frug", "invert/browse")
grazer <- c("browse/graze", "Browse/graze", "browse/graze/frug", "frug/browse/graze", "frug/graze", "graze", "Graze",
"graze/brower", "graze/browse", "Graze/browse", "graze/browse/frug", "Graze/carn", "graze/frug", "Graze/frug",
"graze/ginsect")
frugivore <- c("browse/frug", "Browse/frug", "browse/frug/ginsect", "Browse/frug/ginsect", "browse/graze/frug", "carn/frug",
"carn/ginsect/frug", "carn/invert/frug", "frug", "Frug", "frug/Ainsect", "frug/browse", "Frug/browse", "frug/browse/carn",
"frug/browse/ginsect", "frug/browse/graze", "frug/carn", "frug/ginsect", "Frug/ginsect", "frug/ginsect/browse", "frug/ginsect/carn",
"frug/graze", "frug/herb", "frug/invert", "ginsect/browse/frug", "ginsect/carn/frug", "ginsect/frug", "Ginsect/frug",
"ginsect/frug/browse", "Ginsect/frug/carn", "graze/browse/frug", "graze/frug", "Graze/frug", "invert/carn/frug", "inverts/carn/frug")
piscivore <- c("Carn/piscivore", "invert/piscivore", "piscivore", "piscivore/invert", "piscivore/invert/carn")
troph.diet <- which(df$trophic %in% c(invertivore, carnivore, browser, grazer, frugivore, piscivore))
df <- df %>% mutate(diet.invertivore = trophic %in% invertivore,
diet.carnivore = trophic %in% carnivore,
diet.browser = trophic %in% browser,
diet.grazer = trophic %in% grazer,
diet.frugivore = trophic %in% frugivore,
diet.piscivore = trophic %in% piscivore)
# Find NAs and replace them with genereic averages
df %>%
dplyr::select(starts_with("diet")) %>%
colSums()
df$diet.src <- NA
df$diet.src[troph.diet] <- "troph.diet"
diet <- df %>%
dplyr::select(order, family, genus, binomial, starts_with("diet"))
species.diet <- filter(diet, !is.na(diet.src)) %>% group_by(binomial) %>%
summarise(family = family[1],
genus = genus[1],
diet.invertivore = sum(diet.invertivore, na.rm = TRUE) >= 1,
diet.carnivore = sum(diet.carnivore, na.rm = TRUE) >= 1,
diet.browser = sum(diet.browser, na.rm = TRUE) >= 1,
diet.grazer = sum(diet.grazer, na.rm = TRUE) >= 1,
diet.frugivore = sum(diet.frugivore, na.rm = TRUE) >= 1,
diet.piscivore = sum(diet.piscivore, na.rm = TRUE) >= 1,
diet.src = "species.diet")
genus.diet <- group_by(species.diet, genus) %>%
summarise(family = family[1],
diet.invertivore = mean(diet.invertivore, na.rm = TRUE) > 0.5,
diet.carnivore = mean(diet.carnivore, na.rm = TRUE) > 0.5,
diet.browser = mean(diet.browser, na.rm = TRUE) > 0.5,
diet.grazer = mean(diet.grazer, na.rm = TRUE) > 0.5,
diet.frugivore = mean(diet.frugivore, na.rm = TRUE) > 0.5,
diet.piscivore = mean(diet.piscivore, na.rm = TRUE) > 0.5,
diet.src = "mean.genus")
family.diet <- group_by(genus.diet, family) %>%
summarise(diet.invertivore = mean(diet.invertivore, na.rm = TRUE) > 0.5,
diet.carnivore = mean(diet.carnivore, na.rm = TRUE) > 0.5,
diet.browser = mean(diet.browser, na.rm = TRUE) > 0.5,
diet.grazer = mean(diet.grazer, na.rm = TRUE) > 0.5,
diet.frugivore = mean(diet.frugivore, na.rm = TRUE) > 0.5,
diet.piscivore = mean(diet.piscivore, na.rm = TRUE) > 0.5,
diet.src = "mean.family")
for(i in 1:nrow(df)) {
if(df$binomial[i] %in% species.diet$binomial) {
k <- which(species.diet$binomial == df$binomial[i])
df[i, c("diet.invertivore", "diet.carnivore", "diet.browser", "diet.grazer", "diet.frugivore", "diet.piscivore", "diet.src")] <-
species.diet[k, c("diet.invertivore", "diet.carnivore", "diet.browser", "diet.grazer", "diet.frugivore", "diet.piscivore", "diet.src")]
} else if(df$genus[i] %in% genus.diet$genus) {
k <- which(genus.diet$genus == df$genus[i])
df[i, c("diet.invertivore", "diet.carnivore", "diet.browser", "diet.grazer", "diet.frugivore", "diet.piscivore", "diet.src")] <-
genus.diet[k, c("diet.invertivore", "diet.carnivore", "diet.browser", "diet.grazer", "diet.frugivore", "diet.piscivore", "diet.src")]
} else if(df$family[i] %in% family.diet$family) {
k <- which(family.diet$family == df$family[i])
df[i, c("diet.invertivore", "diet.carnivore", "diet.browser", "diet.grazer", "diet.frugivore", "diet.piscivore", "diet.src")] <-
family.diet[k, c("diet.invertivore", "diet.carnivore", "diet.browser", "diet.grazer", "diet.frugivore", "diet.piscivore", "diet.src")]
} else {
stop("Cannot find diet")
}
}
table(df$diet.src, useNA = "always")
df$diet.breadth <- df %>%
dplyr::select(diet.invertivore:diet.piscivore) %>%
rowSums()
table(df$diet.breadth)
##remove continental duplicates
# Checking for accidents
stopifnot(!any(str_trim(df$genus) != df$genus))
stopifnot(!any(str_trim(df$species) != df$species))
df$binomial[duplicated(df$binomial)]
df[(duplicated(df[c("binomial", "continent")])),]
# Remove introduced species
table(df$extant.status)
df <- df[-which(df$extant.status == "introduction"), ]
# Remove domesticated species
df <- df[-which(df$extant.status == "domesticated"), ]
#create ncont
cont <- group_by(df, binomial) %>%
dplyr::summarise(n.cont = n())
df <- left_join(df, cont,
by = "binomial")
#remove humans
df <- df[df$binomial != "Homo sapiens",]
##data used for analyses----
write.csv(df, "global.mammal.data.csv")
install.packages("devtools")
devtools::install_github("futres/rfutres")
