pema[pema$individualID == pema.ID[i], c(18:24)],
"calculated HBL", NA, "calculated HBL", NA, NA, NA, NA)
pema <- rbind(pema, new.row)
}
}
new.row
#X <- max(pema$X + 1)
#R.ID.1 <- pema[pema$individualID == pema.ID[i], c(2:13)]
#R.ID.2 <- pema[pema$individualID == pema.ID[i], c(18:24)]
#trait <- c("calculated HBL", "mm", "head body length", hbl)
#other <- c("calculated HBL", NA, "calculated HBL", NA, NA, NA, NA)
new.row <- (max(pema$X + 1),
pema[pema$individualID == pema.ID[i], c(2:13)],
"calculated HBL", "mm", "head body length", hbl,
pema[pema$individualID == pema.ID[i], c(18:24)],
"calculated HBL", NA, "calculated HBL", NA, NA, NA, NA)
pema[pema$individualID == pema.ID[1], c(2:13)]
pema[pema$individualID == pema.ID[1], c(2:13)][1]
pema[pema$individualID == pema.ID[1][1], c(2:13)]
pema[pema$individualID == pema.ID[1][[1]], c(2:13)]
y<- ema[pema$individualID == pema.ID[1], c(2:13)]
y<- pema[pema$individualID == pema.ID[1], c(2:13)]
y[1,]
y[[1],]
y[1,][1]
y[1,]
unname(y[1,])
z<-unname(y[1,])
z
str(z)
z<-as.character(y[1,])
z
str(z)
a <- c(10, 11)
b <- c(A, B)
b <- c("A", "B")
d <- c(a, b)
d
for(i in 1:length(pema.ID)){
if(isTRUE(is.na(pema$measurementValue[pema$individualID == pema.ID[i] &
pema$measurementType %in% linear.trait]))){
next
}
else{
hbl <- pema$measurementValue[pema$individualID == pema.ID[i] &
pema$measurementType %in% trait.length] - pema$measurementValue[pema$individualID == pema.ID[i] &
pema$measurementType == "tail length"]
X <- max(pema$X + 1)
R.ID.1 <- pema[pema$individualID == pema.ID[i], c(2:13)]
R.1 <- as.character(R.ID.1[1,])
R.ID.2 <- pema[pema$individualID == pema.ID[i], c(18:24)]
R.2 <- as.character(R.ID.2[1,])
trait <- c("calculated HBL", "mm", "head body length", hbl)
other <- c("calculated HBL", NA, "calculated HBL", NA, NA, NA, NA)
new.row <- c(X,
R.1,
trait,
R.2,
other)
pema <- rbind(pema, new.row)
}
}
pema$measurementValue <- as.numeric(pema$measurementValue)
for(i in 1:length(pema.ID)){
if(isTRUE(is.na(pema$measurementValue[pema$individualID == pema.ID[i] &
pema$measurementType %in% linear.trait]))){
next
}
else{
hbl <- pema$measurementValue[pema$individualID == pema.ID[i] &
pema$measurementType %in% trait.length] - pema$measurementValue[pema$individualID == pema.ID[i] &
pema$measurementType == "tail length"]
X <- max(pema$X + 1)
R.ID.1 <- pema[pema$individualID == pema.ID[i], c(2:13)]
R.1 <- as.character(R.ID.1[1,])
R.ID.2 <- pema[pema$individualID == pema.ID[i], c(18:24)]
R.2 <- as.character(R.ID.2[1,])
trait <- c("calculated HBL", "mm", "head body length", hbl)
other <- c("calculated HBL", NA, "calculated HBL", NA, NA, NA, NA)
new.row <- c(X,
R.1,
trait,
R.2,
other)
pema <- rbind(pema, new.row)
}
}
str(pema$X)
z <- as.numeric(pema$X)
pema$X <- as.numeric(pema$X)
for(i in 1:length(pema.ID)){
if(isTRUE(is.na(pema$measurementValue[pema$individualID == pema.ID[i] &
pema$measurementType %in% linear.trait]))){
next
}
else{
hbl <- pema$measurementValue[pema$individualID == pema.ID[i] &
pema$measurementType %in% trait.length] - pema$measurementValue[pema$individualID == pema.ID[i] &
pema$measurementType == "tail length"]
X <- max(pema$X + 1)
R.ID.1 <- pema[pema$individualID == pema.ID[i], c(2:13)]
R.1 <- as.character(R.ID.1[1,])
R.ID.2 <- pema[pema$individualID == pema.ID[i], c(18:24)]
R.2 <- as.character(R.ID.2[1,])
trait <- c("calculated HBL", "mm", "head body length", hbl)
other <- c("calculated HBL", NA, "calculated HBL", NA, NA, NA, NA)
new.row <- c(X,
R.1,
trait,
R.2,
other)
pema <- rbind(pema, new.row)
}
}
for(i in 1:length(pema.ID)){
if(isTRUE(is.na(pema$measurementValue[pema$individualID == pema.ID[i] &
pema$measurementType %in% linear.trait]))){
next
}
else{
hbl <- pema$measurementValue[pema$individualID == pema.ID[i] &
pema$measurementType == "body length"] - pema$measurementValue[pema$individualID == pema.ID[i] &
pema$measurementType == "tail length"]
X <- max(pema$X + 1)
R.ID.1 <- pema[pema$individualID == pema.ID[i], c(2:13)]
R.1 <- as.character(R.ID.1[1,])
R.ID.2 <- pema[pema$individualID == pema.ID[i], c(18:24)]
R.2 <- as.character(R.ID.2[1,])
trait <- c("calculated HBL", "mm", "head body length", hbl)
other <- c("calculated HBL", NA, "calculated HBL", NA, NA, NA, NA)
new.row <- c(X,
R.1,
trait,
R.2,
other)
pema <- rbind(pema, new.row)
}
}
pema$measurementValue[pema$individualID == pema.ID[1] &
pema$measurementType == "tail length"]
pema$measurementValue[pema$individualID == pema.ID[1] &
pema$measurementType == "body length"]
pema$measurementValue[pema$individualID == pema.ID[2] &
pema$measurementType == "body length"]
pema$measurementValue[pema$individualID == pema.ID[3] &
pema$measurementType == "body length"]
pema$measurementValue[pema$individualID == pema.ID[4] &
pema$measurementType == "body length"]
pema$measurementValue[pema$individualID == pema.ID[5] &
pema$measurementType == "body length"]
head(pema$individualID[pema$measurementType == "body length" &])
head(pema$individualID[pema$measurementType == "body length" & pema$measurementValue > 0])
pema$measurementValue[pema$individualID == "8f83d89e186d4229b88ac80bba44241c" &
pema$measurementType == "body length"]
X <- max(as.numeric(pema$X) + 1)
X
#test with Peromyscus maniculatus
pema <- ii.df.hbl[ii.df.hbl$scientificName == "Peromyscus maniculatus",]
pema.ID <- unique(pema$individualID)
nrow(pema)
length(pema.ID)
for(i in 1:length(pema.ID)){
if(isTRUE(is.na(pema$measurementValue[pema$individualID == pema.ID[i] &
pema$measurementType %in% linear.trait]))){
next
}
else{
hbl <- as.numeric(pema$measurementValue[pema$individualID == pema.ID[i] &
pema$measurementType == "body length"]) - as.numeric(pema$measurementValue[pema$individualID == pema.ID[i] &
pema$measurementType == "tail length"])
X <- max(as.numeric(pema$X) + 1)
R.ID.1 <- pema[pema$individualID == pema.ID[i], c(2:13)]
R.1 <- as.character(R.ID.1[1,])
R.ID.2 <- pema[pema$individualID == pema.ID[i], c(18:24)]
R.2 <- as.character(R.ID.2[1,])
trait <- c("calculated HBL", "mm", "head body length", hbl)
other <- c("calculated HBL", NA, "calculated HBL", NA, NA, NA, NA)
new.row <- c(X,
R.1,
trait,
R.2,
other)
pema <- rbind(pema, new.row)
}
}
for(i in 1:length(pema.ID)){
if(isTRUE(is.na(pema$measurementValue[pema$individualID == pema.ID[i] &
pema$measurementType %in% linear.trait]))){
next
}}
for(i in 1:length(pema.ID)){
if(isTRUE(is.na(pema$measurementValue[pema$individualID == pema.ID[i] &
pema$measurementType %in% linear.trait]))){
next
}
else{
hbl <- as.numeric(pema$measurementValue[pema$individualID == pema.ID[i] &
pema$measurementType == "body length"]) - as.numeric(pema$measurementValue[pema$individualID == pema.ID[i] &
pema$measurementType == "tail length"])
X <- max(as.numeric(pema$X) + 1)
R.ID.1 <- pema[pema$individualID == pema.ID[i], c(2:13)]
R.1 <- as.character(R.ID.1[1,])
R.ID.2 <- pema[pema$individualID == pema.ID[i], c(18:24)]
R.2 <- as.character(R.ID.2[1,])
trait <- c("calculated HBL", "mm", "head body length", hbl)
other <- c("calculated HBL", NA, "calculated HBL", NA, NA, NA, NA)
new.row <- c(X,
R.1,
trait,
R.2,
other)
pema <- rbind(pema, new.row)
}
}
hbl.df <- data.frame
for(i in 1:length(pema.ID)){
if(isTRUE(is.na(pema$measurementValue[pema$individualID == pema.ID[i] &
pema$measurementType %in% linear.trait]))){
hbl.df$`head body length`[i] <- NA
hbl.df$individualID[i] <- pema$individualID[pema$individualID == pema.ID[i]]
}
else{
hbl.df$`head body length`[i] <- as.numeric(pema$measurementValue[pema$individualID == pema.ID[i] &
pema$measurementType == "body length"]) - as.numeric(pema$measurementValue[pema$individualID == pema.ID[i] &
pema$measurementType == "tail length"])
hbl.df$individualID[i] <- pema$individualID[pema$individualID == pema.ID[i]]
}
}
hbl.df <- data.frame()
for(i in 1:length(pema.ID)){
if(isTRUE(is.na(pema$measurementValue[pema$individualID == pema.ID[i] &
pema$measurementType %in% linear.trait]))){
hbl.df$`head body length`[i] <- NA
hbl.df$individualID[i] <- pema$individualID[pema$individualID == pema.ID[i]]
}
else{
hbl.df$`head body length`[i] <- as.numeric(pema$measurementValue[pema$individualID == pema.ID[i] &
pema$measurementType == "body length"]) - as.numeric(pema$measurementValue[pema$individualID == pema.ID[i] &
pema$measurementType == "tail length"])
hbl.df$individualID[i] <- pema$individualID[pema$individualID == pema.ID[i]]
}
}
#test with Peromyscus maniculatus
pema <- ii.df.hbl[ii.df.hbl$scientificName == "Peromyscus maniculatus",]
pema.ID <- unique(pema$individualID)
nrow(pema)
length(pema.ID)
hbl.df <- data.frame()
for(i in 1:length(pema.ID)){
if(isTRUE(is.na(pema$measurementValue[pema$individualID == pema.ID[i] &
pema$measurementType %in% linear.trait]))){
hbl.df$`head body length`[i] <- NA
hbl.df$individualID[i] <- pema$individualID[pema$individualID == pema.ID[i]]
}
else{
hbl.df$`head body length`[i] <- as.numeric(pema$measurementValue[pema$individualID == pema.ID[i] &
pema$measurementType == "body length"]) - as.numeric(pema$measurementValue[pema$individualID == pema.ID[i] &
pema$measurementType == "tail length"])
hbl.df$individualID[i] <- pema$individualID[pema$individualID == pema.ID[i]]
}
}
hbl.df$individualID[i] <- pema$individualID[pema$individualID == pema.ID[i]][1]
hbl.df <- data.frame()
hbl.df <- data.frame()
for(i in 1:length(pema.ID)){
if(isTRUE(is.na(pema$measurementValue[pema$individualID == pema.ID[i] &
pema$measurementType %in% linear.trait]))){
hbl.df$`head body length`[i] <- NA
hbl.df$individualID[i] <- pema$individualID[pema$individualID == pema.ID[i]][1]
}
else{
hbl.df$`head body length`[i] <- as.numeric(pema$measurementValue[pema$individualID == pema.ID[i] &
pema$measurementType == "body length"]) - as.numeric(pema$measurementValue[pema$individualID == pema.ID[i] &
pema$measurementType == "tail length"])
hbl.df$individualID[i] <- pema$individualID[pema$individualID == pema.ID[i]][1]
}
}
isTRUE(is.na(pema$measurementValue[pema$individualID == "4ebc8129ce534214ae50a4d8a2164171" &
pema$measurementType %in% linear.trait])))
isTRUE(is.na(pema$measurementValue[pema$individualID == "4ebc8129ce534214ae50a4d8a2164171" &
pema$measurementType %in% linear.trait]))
hbl.df$`head body length`[i] <- as.numeric(pema$measurementValue[pema$individualID == "4ebc8129ce534214ae50a4d8a2164171" &
pema$measurementType == "body length"]) - as.numeric(pema$measurementValue[pema$individualID == "4ebc8129ce534214ae50a4d8a2164171" &
pema$measurementType == "tail length"])
hbl.df$`head body length`
as.numeric(pema$measurementValue[pema$individualID == "4ebc8129ce534214ae50a4d8a2164171" &
pema$measurementType == "body length"]) - as.numeric(pema$measurementValue[pema$individualID == "4ebc8129ce534214ae50a4d8a2164171" &
pema$measurementType == "tail length"])
as.numeric(pema$measurementValue[pema$individualID == "4ebc8129ce534214ae50a4d8a2164171" &
pema$measurementType == "body length"])
pema[pema$individualID == "4ebc8129ce534214ae50a4d8a2164171",]
for(i in 1:length(pema.ID)){
if(isTRUE(is.na(pema$measurementValue[pema$individualID == pema.ID[i] &
pema$measurementType == "tail length"]))){
hbl.df$`head body length`[i] <- NA
hbl.df$individualID[i] <- pema$individualID[pema$individualID == pema.ID[i]][1]
}
else if(isTRUE(is.na(pema$measurementValue[pema$individualID == pema.ID[i] &
pema$measurementType == "body length"]))){
hbl.df$`head body length`[i] <- NA
hbl.df$individualID[i] <- pema$individualID[pema$individualID == pema.ID[i]][1]
}
else{
hbl.df$`head body length`[i] <- as.numeric(pema$measurementValue[pema$individualID == pema.ID[i] &
pema$measurementType == "body length"]) - as.numeric(pema$measurementValue[pema$individualID == pema.ID[i] &
pema$measurementType == "tail length"])
hbl.df$individualID[i] <- pema$individualID[pema$individualID == pema.ID[i]][1]
}
}
isTRUE(is.na(pema$measurementValue[pema$individualID == "4ebc8129ce534214ae50a4d8a2164171" &
pema$measurementType == "tail length"]))
isTRUE(is.na(pema$measurementValue[pema$individualID == "4ebc8129ce534214ae50a4d8a2164171" &
pema$measurementType == "body length"]))
pema$measurementValue[pema$individualID == "4ebc8129ce534214ae50a4d8a2164171" &
pema$measurementType == "body length"]
isTRUE(pema$measurementValue[pema$individualID == "4ebc8129ce534214ae50a4d8a2164171" &
pema$measurementType == "tail length"] > 0)
!isTRUE(pema$measurementValue[pema$individualID == "4ebc8129ce534214ae50a4d8a2164171" &
pema$measurementType == "tail length"] > 0)
!isTRUE(pema$measurementValue[pema$individualID == "4ebc8129ce534214ae50a4d8a2164171" &
pema$measurementType == "body length"] > 0)
colnames(pema)
#hbl.df <- data.frame()
#"4ebc8129ce534214ae50a4d8a2164171"
for(i in 1:length(pema.ID)){
if(!isTRUE(pema$measurementValue[pema$individualID == pema.ID[i] &
pema$measurementType == "tail length"] > 0)){
next
}
else if(!isTRUE(pema$measurementValue[pema$individualID == pema.ID[i] &
pema$measurementType == "body length"] > 0)){
next
}
else{
hbl <- as.numeric(pema$measurementValue[pema$individualID == pema.ID[i] &
pema$measurementType == "body length"]) - as.numeric(pema$measurementValue[pema$individualID == pema.ID[i] &
pema$measurementType == "tail length"])
X <- max(as.numeric(pema$X) + 1)
R.ID.1 <- pema[pema$individualID == pema.ID[i], c(2:13)]
R.1 <- as.character(R.ID.1[1,])
R.ID.2 <- pema[pema$individualID == pema.ID[i], c(18:24)]
R.2 <- as.character(R.ID.2[1,])
trait <- c("calculated HBL", "mm", "head body length", hbl)
other <- c("calculated HBL", NA, "calculated HBL", NA, NA, NA, NA)
new.row <- c(X,
R.1,
trait,
R.2,
other)
pema <- rbind(pema, new.row)
}
}
unique(pema$measurementType)
ii.df.hbl <- ii.df
#now for all
ii.df.hbl <- ii.df
ID <- unique(ii.df.hbl$individualID)
for(i in 1:length(ID)){
if(!isTRUE(ii.df.hbl$measurementValue[ii.df.hbl$individualID == ID[i] &
ii.df.hbl$measurementType == "tail length"] > 0)){
next
}
else if(!isTRUE(ii.df.hbl$measurementValue[ii.df.hbl$individualID == ID[i] &
ii.df.hbl$measurementType == "body length"] > 0)){
next
}
else{
hbl <- as.numeric(ii.df.hbl$measurementValue[ii.df.hbl$individualID == ID[i] &
ii.df.hbl$measurementType == "body length"]) - as.numeric(ii.df.hbl$measurementValue[ii.df.hbl$individualID == ID[i] &
ii.df.hbl$measurementType == "tail length"])
X <- max(as.numeric(ii.df.hbl$X) + 1)
R.ID.1 <- ii.df.hbl[ii.df.hbl$individualID == ID[i], c(2:13)]
R.1 <- as.character(R.ID.1[1,])
R.ID.2 <- ii.df.hbl[ii.df.hbl$individualID == ID[i], c(18:24)]
R.2 <- as.character(R.ID.2[1,])
trait <- c("calculated HBL", "mm", "head body length", hbl)
other <- c("calculated HBL", NA, "calculated HBL", NA, NA, NA, NA)
new.row <- c(X,
R.1,
trait,
R.2,
other)
ii.df.hbl <- rbind(ii.df.hbl, new.row)
}
}
#recalculate sample size
ii.stats <- ii.df %>%
group_by(scientificName) %>%
dplyr::summarise(sample.size = n(),
n.body.mass = length(measurementType == "body mass"),
n.body.length = length(measurementType == "body length"),
n.tail.length = length(measurementType == "tail length"),
n.HBL = length(measurementType == "head body length"))
ii.stats
n.body.mass = length(!is.na(measurementValue[measurementType == "body mass"]),
#recalculate sample size
ii.stats <- ii.df %>%
group_by(scientificName) %>%
dplyr::summarise(sample.size = n(),
n.body.mass = length(!is.na(measurementValue[measurementType == "body mass"])),
n.body.length = length(!is.na(measurementValue[measurementType == "body length"])),
n.tail.length = length(!is.na(measurementValue[measurementType == "tail length"])),
n.HBL = length(!is.na(measurementValue[measurementType == "head body length"])))
)
colnames(ii.df)
#recalculate sample size
ii.stats <- ii.df %>%
group_by(scientificName) %>%
dplyr::summarise(sample.size = n(),
n.body.mass = length(!is.na(measurementValue[measurementType == "body mass"])),
n.body.length = length(!is.na(measurementValue[measurementType == "body length"])),
n.tail.length = length(!is.na(measurementValue[measurementType == "tail length"])),
n.HBL = length(!is.na(measurementValue[measurementType == "head body length"])))
ii.stats
write.csv(ii.stats, "inter.intra.counts.csv")
write.csv(ii.long, "inter.intra.csv")
write.csv(ii.df, "inter.intra.csv")
write.csv(ii.stats, "inter.intra.counts.csv")
setwd("~/GitHub/SmithLab/GlobeTrotters/Data")
##load packages----
require(dplyr)
require(purrrlyr)
require(tidyverse)
require(tidyr)
require(reshape2)
require(ggplot2)
require(stringr)
##load data----
options(stringsAsFactors = FALSE)
mom <- read.csv("MOMv11.csv", header = TRUE)
unique(mom$extant.status)
##ABOUT DATA ----
invasive <- length(unique(mom$binomial[mom$extant.status == "introduction" |
mom$extant.status == "domesticated"]))
invasive
length(unique(mom$binomial))
total <- length(unique(mom$binomial))
invasive/total
(invasive/total)*100
mom <- read.csv("MOMv11.csv", header = TRUE)
pacifici <- read.csv("Generation Lenght for Mammals.csv", header = TRUE)
origin <- read.csv("familyOrigin.csv", header = TRUE)
pbdb <- read.csv("pbdb.data.csv", as.is = T)
faurby.ages <- read.csv("species.age.csv", header = TRUE, row.names = 1)
ranges <- read.csv("ranges.csv", header = TRUE)
pantheria <- read.csv("pantheria.csv", header = TRUE)
df <- read.csv("global.mammal.data.csv", header = TRUE)
df
null.breadth <- df %>%
group_by(diet.breadth) %>%
drop_na(diet.breadth) %>%
dplyr::summarise(null.N = n()) %>%
dplyr::select(diet.breadth,
null.N) %>%
as.data.frame()
breadth <- df %>%
group_by(n.cont, diet.breadth) %>%
drop_na(diet.breadth) %>%
dplyr::summarise(N = n()) %>%
as.data.frame()
homies.breadth <- breadth[breadth$n.cont == 1,]
colnames(homies.breadth)[colnames(homies.breadth) == "N"] <- "homies.N"
homies.breadth <- homies.breadth %>%
dplyr::select(-n.cont)
limited.breadth <- breadth[breadth$n.cont == 2,]
colnames(limited.breadth)[colnames(limited.breadth) == "N"] <- "limited.N"
limited.breadth <- limited.breadth %>%
dplyr::select(-n.cont)
trotter.breadth <- breadth[breadth$n.cont == "3+",]
colnames(trotter.breadth)[colnames(trotter.breadth) == "N"] <- "trotter.N"
trotter.breadth <- trotter.breadth %>%
dplyr::select(-n.cont)
#create full dataset
breadth.null.trot <- merge(null.breadth, trotter.breadth, by = "diet.breadth", all.x = TRUE, all.y = TRUE)
breadth.null.trot.lim <- merge(breadth.null.trot, limited.breadth, by = "diet.breadth", all.x = TRUE, all.y = TRUE)
breadth.null.trol.lim.homies <- merge(breadth.null.trot.lim, homies.breadth, by = "diet.breadth", all.x = TRUE, all.y = TRUE)
df.breadth <- breadth.null.trol.lim.homies
df.breadth[is.na(df.breadth)] <- 0
df.breadth
##deeper look into dietary breadth of 3
df.3 <- df[df$diet.breadth ==3,]
nrow(df.3)
table(df.3)
table(df.3, binomial)
table(df.3$binomial)
table(df.3$diet.invertivore.tot)
View(df.3)
nrow(df.3)
nrow(df)
184/4386
View(df.3)
length(df.3$binomial[df.3$diet.browser.tot == TRUE &
df.3$diet.invertivore.tot == TRUE &
df.3$diet.frugivore.tot == TRUE])
length(df.3$binomial[df.3$diet.browser.tot == TRUE &
df.3$diet.carnivore.tot == TRUE &
df.3$diet.frugivore.tot == TRUE])
length(df.3$binomial[df.3$diet.invertivore.tot == TRUE &
df.3$diet.carnivore.tot == TRUE &
df.3$diet.frugivore.tot == TRUE])
16+2+152
View(df.3)
length(df.3$binomial[df.3$diet.browser.tot == TRUE &
df.3$diet.grazer.tot == TRUE &
df.3$diet.frugivore.tot == TRUE])
table(df.3$n.cont)
297+17+685+2+113+44+4+424+13
424/1599
152/184
179/184
297+685+113
1095/1599
